I was planning to build a home lab for malware analysis (my new hobby) so I had the good idea of installing esxi 6.0 free edition.
I left the new machine with a windows vm and a visual studio to do some tests on visual studio c++ and I tought to later install cuckoo sandbox to play with malware.
When the day came and I finally realized that the free version of esxi lacks the api access that cuckoo needs I wanted to throw the harddisk. 
I know my plan sucked and worst I had installed two windows with original keys (ouch!).

Last time I configured a homelab in 2009 for doing some networking research, I used proxmox and since my cpu didn't support hardware virtualization. 
I loved to use those openvz containers, it allow me to manage like 6 or more vms with 2gig.

Today I installed again proxmox to create a malware analysis laboratory and it was an amazing experience to have both worlds the one of openvz containers and kvm, also the proxmox web interface is great!.

I created this post to share how I made my lab:
First I downloaded the iso from proxmox web and "burned" the iso on my pendrive using  OSForsenics USB installer.

Creating a bridge for virtual machines using systemd-networkd
sudo apt-get install vlan
https://blog.sleeplessbeastie.eu/2012/12/23/debian-how-to-create-vlan-interface/

systemctl enable systemd-networkd
systemctl disable NetworkManager
systemctl enable systemd-resolved
ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
mkdir /etc/systemd/network

# This bridge will is used to NAT LXC containers' traffic
auto lxcbr0
iface lxcbr0 inet static
    pre-up brctl addbr lxcbr0
    bridge_fd 0
    bridge_maxwait 0
    address 192.168.122.1
    netmask 255.255.255.0
    post-up iptables -A FORWARD -i lxcbr0 -s 192.168.122.1/24 -j ACCEPT
    post-up iptables -A POSTROUTING -t nat -s 192.168.122.1/24 -j MASQUERADE
    # add checksum so that dhclient does not complain.
    # udp packets staying on the same host never have a checksum filled else
    post-up iptables -A POSTROUTING -t mangle -p udp --dport bootpc -s 192.168.122.1/24 -j CHECKSUM --checksum-fill

https://github.com/kbandla/pydeep.git
https://github.com/plusvic/yara.git
wget http://www.digip.org/jansson/releases/jansson-2.7.tar.gz
yara steps
./configure --enable-cuckoo --enable-magic
https://github.com/vext01/distorm3.git
https://github.com/volatilityfoundation/volatility.git
https://github.com/plusvic/yara-python.git
http://yara.readthedocs.io/en/v3.4.0/gettingstarted.html#compiling-yara

https://infosecspeakeasy.org/t/howto-build-a-cuckoo-sandbox/27

https://pve.proxmox.com/wiki/Install_Proxmox_VE_on_Debian_Jessie
https://dustri.org/b/hardening-proxmox-against-physical-attacks.html

https://major.io/2015/03/26/creating-a-bridge-for-virtual-machines-using-systemd-networkd/

http://blog.nguyenvq.com/blog/2011/09/13/remote-unlocking-luks-encrypted-lvm-using-dropbear-ssh-in-ubuntu/

-- 
gpg/pgp key: 0x45e1ecde06521134
